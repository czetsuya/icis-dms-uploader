'@author czetsuya
Option Compare Database
Option Explicit

Function FindTable(ByVal strQryName As String) As Integer
'Returns true if the specified table exists in the database
     Dim db As Database, tdf As TableDef
     Set db = CurrentDb
     For Each tdf In db.TableDefs
          If tdf.name = strQryName Then
             FindTable = True
             Exit For
          End If
     Next
End Function

Function FindQuery(ByVal strQryName As String) As Integer
'Returns true if the specified query exists in the database
     Dim db As Database, qdf As QueryDef
     Set db = CurrentDb
     For Each qdf In db.QueryDefs
          If qdf.name = strQryName Then
             FindQuery = True
             Exit For
          End If
     Next
End Function

Public Sub InsertData(tblname As String, colName As String, val As String)
    Dim fields() As String, s As String
    Dim i As Integer
    fields() = Split(val, ",")
    For i = 0 To UBound(fields)
        s = "INSERT INTO " & tblname & "(" & colName & ") VALUES (" & fields(i) & ")"
        DoCmd.RunSQL s
    Next
End Sub

Function GetMaxId(str As String) As Integer
    Dim rst As DAO.Recordset, qdf As DAO.QueryDef
    
    Set qdf = CurrentDb.CreateQueryDef("", str)
    Set rst = qdf.OpenRecordset()
    If (IsNull(rst.fields(0))) Then
        GetMaxId = 0
    Else
        GetMaxId = rst.fields(0)
    End If
    rst.Close
End Function

Function GetRecordCount(str As String) As Integer
    Dim rst As DAO.Recordset, qdf As DAO.QueryDef
    
    Set qdf = CurrentDb.CreateQueryDef("", str)
    Set rst = qdf.OpenRecordset()
    GetRecordCount = rst.RecordCount
    rst.Close
End Function
